name: "Step - Deploy"

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      resource_group_name:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  deploy:
    name: CD (deploy to ${{ inputs.env }})
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}

    steps:
      # need to get access to the 'infrastructure' folder and Bicep there while running IaC
      - name: Checkout the Repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          # this will be 'app-artifact.zip'
          name: app-artifact
          # this folder and the one from 'Upload artifact' step - are different
          # as jobs DO NOT SHARE file system while running
          path: artifacts/

      - name: Login to Azure
        uses: azure/login@v2
        with:
          # these are values from Azure Managed Identity => Settings => Properties
          # saved in GitHub as 'dev'/'qa' Environment secrets
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Check if Azure App Service exists
        id: check-app-service
        run: |
          az webapp show --name app-github-actions-demo-${{ inputs.env }} --resource-group ${{ inputs.resource_group_name }}
        continue-on-error: true

      # for 'dev' F1 (free) App Service will be created manually as
      # F1s App Services can't be created via IaC (Azure restriction)!!!
      # and
      # this step will be skipped if 'qa' App Service is already created
      - name: Run IaC via Bicep (Creat Azure App Service)
        if: inputs.env != 'dev' && steps.check-app-service.outcome != 'success'
        run: |
          az deployment group create \
            --name ${{ inputs.env }}-deployment-${{ github.run_number }} \
            --template-file infrastructure/main.bicep \
            --parameters infrastructure/environments/${{ inputs.env }}.bicepparam \
            --resource-group ${{ inputs.resource_group_name }} \
            --verbose

      - name: Deploy artifact to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          # Azure App Service name
          app-name: app-github-actions-demo-${{ inputs.env }}
          # this is the folder from the 'Download artifact' step
          package: artifacts/
        # setting Environment Variable
        env:
          # 'slot' - is the name of a slot created here: App Service => Deployment slots => Add
          SLOT_NAME: ${{ inputs.env == 'qa' && 'slot' || '' }}


      # slots are used for 'Zero Deployment Downtime' (green/blue swapping)
      # slots are only available for 'S1' App Services and higher
      # so if it's 'dev' the step will be skipped (we are using 'S1' for QA)
      # a slot should be created at the AppService level (App Service => Deployment slots => Add)
      # before using this step
      - name: Swap slots
        if: inputs.env != 'dev'
        run: |
          az webapp deployment slot swap -g ${{ inputs.resource_group_name }} -n ${{ inputs.app_service_name }} --slot ${{ env.SLOT_NAME }} --target-slot production --verbose